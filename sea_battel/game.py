#–∏–º–ø–æ—Ä—Ç–∏—Ä–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞ —Å–∞–º–æ–π –∏–≥—Ä—ã
import random
import time
from ship import Ship
from player import *
from sea_battel import Board


class Game():#–∫–ª–∞—Å—Å —Å–∞–º–æ–π –∏–≥—Ä—ã, —Ç–æ –º–µ—Å—Ç–æ –≥–¥–µ –≤—Å–µ —Å–∫–ª–µ–∏–≤–∞–µ–º –≤ –∫—É—á—É
    def __init__(self):
        R = "make your board random push yes,for no push any buttom. better push no "
        print(R.upper().center(150))#–ø—Ä–∏–∫—Ä—É—á–∏–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä–∞–∫—É —Å—Ç–∞–≤–∏—Ç—å –∫–æ—Ä–∞–±–ª–∏ —Å–∞–º–æ–º—É. –ï—Å—Ç—å –Ω—é–∞–Ω—Å—ã
        ans = input().upper()
        if ans.isalpha() and ans == "YES":
            c = self.choise_place()
        else:
            c = self.random_board()
        c2 = self.random_board()
        self.play = Comp(c, c2)
        self.play2 = You(c2, c)
        c2.hidden = True

    def random_board(self): #–º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å–∫–∏ —Å –∫–æ—Ä–∞–±–ª—è–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç–æ–¥–∞ random_place()
        board = None
        while board is None:
            board = self.random_place()
        return board

    def choise_place(self):#–º–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–∞–±–ª–µ–π –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å.–Ω–µ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω
        lens = [3, 2, 2, 1, 1, 1, 1]
        board = Board()
        print("Please add ship ")
        for l in lens:
            print(l)
            a = input("input Point of the ship nose :").split()
            b = input("ship position 0 -vertical, 1 Horizont :")
            ship = Ship(l, Point(int(a[0])-1, int(a[1])-1), int(b))
            try:
                board.ship_plus(ship)
                print(board.field)
            except BoardBusyException as e:
                print (e)
            print(board)
        board.begin()
        return board

    def random_place(self):#–º–µ—Ç–æ–¥ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∞–±–ª–µ–π
        lens = [3, 2, 2, 1, 1, 1, 1]
        board = Board()
        attempts = 0
        for l in lens:
            while True:
                attempts += 1
                if attempts > 2000:
                    return None
                ship = Ship(l, Point(randint(0, 6), randint(0, 6)), randint(0, 1))
                try:
                    board.ship_plus(ship)
                    break
                except BoardBusyException:
                    pass
        board.begin()
        return board

    def loop(self):#–º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
        l = 2
        while True:
            fras = ["Its your chance", "Go - Go", "Do it", "You are weak"]#—Å–ª–æ–≤–∞—Ä—å —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ –¥–∞–ª–∏–µ –ø–æ –∏–≥—Ä–µ
            print(10*" "+'Computer Board')
            print(self.play2.board)
            print("üõ•"*22)
            print(10*" "+'Your board')
            print(self.play.board)
            print("üõ•" * 22)
            if l%2 == 0:
                print(f"{fras[random.randint(0,3)]}")
                repeat = self.play2.move()
                time.sleep(1)
            elif l%2 == 1:
                repeat = self.play.move()
                time.sleep(2)
            if repeat:
                l -= 1
            if self.play2.board.count == 7:
                print("You win, congratulation!!!")
                break
            if self.play.board.count == 7:
                print("You win, congratulation!!!")
                break
            l += 1

    def meet(self):#–º–µ—Ç–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–∞, –ø–ª—é—Å –∫–æ—Ä–æ—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏–≥—Ä–µ
        y = Board()
        text = """The game is played on two grids, one for each player. 
        The grids are typically square ‚Äì usually 6√ó6 ‚Äì and the individual squares in the grid are identified by number.
        On one grid the player arranges ships. Every player must arranges 7 ships(programme make it automatic). 
        Every player make move. He print coordinates in accordance with his move. If move in goal, he make next move again.
        If not, it makes next player. Win who first defeated all ships """
        print("\t""         Informations about game")
        print("\t", "                RuleS",
              "\n""______________________________________________________________________________")
        print(f"{text}")
        print("‚ñ†‚ñ†‚ñ† - 1 ship")
        print("‚ô†‚ô† - 2 ships")
        print("‚óè - 4 ships")
        print()
        print("""You see grid, there are - space for marks""")
        print(y)
        print()

    def the_end(self):#–∫–æ–Ω–µ—Ü –∏–≥—Ä—ã.–ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–æ
        print("If you want to play again, print Yes, if not No")
        t = input().upper()
        if t.isalpha() and t == 'YES':
            return self.start_game()
        else:
            return "THE END"

    def start_game(self): #–º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞. –ø–æ–µ—Ö–∞–ª–∏ –∏–≥—Ä–∞—Ç—å
        self.meet()
        self.loop()
        self.the_end()

#g = Game()
#print(g.play.move())
#print(g.play.board)
#print(g.play2.move())
#print(g.play2.board)
#print(g.play.move())
#print(g.play.board)
#print(g.play2.move())
#print(g.play2.board)
g = Game()
g.start_game()
